(function() {

  var mm;

  if (this.mm == null) {
    mm = {
      cache: {},
      modules: {},

      init: function(name) {
        if (mm.modules[name] == null) {
          throw new Error("Module '" + name + "' does not exist");
        }

        var define = mm.modules[name];
        var module = { exports: {}, name: name };
        var require = function(name) {
          return mm.get(mm.expand(mm.dirname(module.name), name));
        };

        mm.cache[name] = module;
        define(require, module, module.exports);
      },

      normalize: function(name) {
        if (mm.modules[name] != null) {
          return name;
        } else if (mm.modules[name + '/index'] != null) {
          return name + '/index';
        } else {
          return name;
        }
      },

      get: function(name) {
        name = mm.normalize(name);
        
        if (mm.cache[name] == null) {
          mm.init(name);
        }

        return mm.cache[name].exports;
      },

      expand: function(root, name) {
        var results = [], parts, part;

        if (/^\.\.?(\/|$)/.test(name)) {
          parts = [root, name].join('/').split('/');
        } else {
          parts = name.split('/');
        }

        for (var i = 0, length = parts.length; i < length; i++) {
          part = parts[i];
          if (part === '..') {
            results.pop();
          } else if (part !== '.' && part !== '') {
            results.push(part);
          }
        }

        return results.join('/');
      },

      dirname: function(path) {
        return path.split('/').slice(0, -1).join('/');
      }
    };

    this.mm = mm;
  } else {
    mm = this.mm;
  }

  if (this.require == null) {
    this.require = mm.get;
  }



  <%
    modules = modules.sort(function(a, b) {
      if (a.name < b.name)
        return -1;
      if (a.name > b.name)
        return 1;
      return 0;
    });

    var module, i;
    for (i = 0; i < modules.length; i++) {
      module = modules[i];
  %>

  mm.modules[<%- JSON.stringify(module.name) %>] = function(require, module, exports) {

<%- module.contents %>

  };

  <% } %>

}).call(this);
